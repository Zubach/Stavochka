@using Stavochka.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}
@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div id="login-box">
 
        <ul class="reg-box-list">
            <li>
                <div class="mdl-textfield mdl-js-textfield">
                    @*<input class="mdl-textfield__input" type="email" id="sample1">*@
                    @Html.TextBoxFor(m => m.Email, new { @class = "mdl-textfield__input", @id = "sample1" })

                    <label class="mdl-textfield__label" for="sample1">Email</label>
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </li>
            <li>
                <div class="mdl-textfield mdl-js-textfield">
                    @*<input class="mdl-textfield__input" type="password" id="sample1">*@
                    @Html.PasswordFor(m => m.Password, new { @class = "mdl-textfield__input", @id = "sample1" })

                    <label class="mdl-textfield__label" for="sample1">Password</label>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </li>
            <li>
                <div class="col-md-offset-2 col-md-10">
                    <div class="checkbox">
                        <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect" for="checkbox-1">
                            @Html.CheckBoxFor(m => m.RememberMe, htmlAttributes: new { @class = "mdl-checkbox__input", @id = "checkbox-1" })
                            <span class="mdl-checkbox__label">Remember me?</span>
                        </label>
                    </div>
                </div>
            </li>
            <li>
                <div class="buttons-box">
                    <!-- Colored raised button -->
                    @*<button class="gradient-bg mdl-button mdl-js-button mdl-button--raised mdl-button--colored mdl-js-ripple-effect">
                            Register
                        </button>*@

                    <a class="btnflip" href="#!">
                        <span class="btnflip-item btnflip__front">Login</span>
                        <span class="btnflip-item btnflip__center"></span>
                        @*<span class="btnflip-item btnflip__back">Register</span>*@
                        <input type="submit" class="btnflip-item btnflip__back" value="Login" />
                    </a>

                </div>
            </li>
            <li>
                @Html.ActionLink("Register as a new user", "Register",routeValues:null,htmlAttributes: new {@style="margin-left:25%;" })
            </li>
        </ul>
    </div>
}

    @*<div class="row">
        <div class="col-md-8">
            <section id="loginForm">

                <h4>Use a local account to log in.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Register as a new user", "Register")
                </p>
               
                
            </section>
        </div>
        <div class="col-md-4">
            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
    </div>*@

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }